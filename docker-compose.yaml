version: '3.6'
services:
  postgres:
    image: postgres:12
    ports:
    - ${DB_HOST_PORT}:5432
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.0.7
    ports:
    - ${HASURA_HOST_PORT}:8080
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${PG_DATABASE_URL}
      PG_DATABASE_URL: ${PG_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: secret
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${JWT_SECRET}"}'
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: guest
      SERVER_BASE_URL: server:3000
      SERVER_WEBHOOK_URL: server:3000/hasura/events
      SERVER_WEBHOOK_SECRET: webhooksecret
  server:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    volumes:
      - .:/workspace
    command: npm run start:dev
    ports:
      - ${SERVER_HOST_PORT}:3000
    environment:
      PG_DATABASE_URL: ${PG_DATABASE_URL}
volumes:
  db_data:

